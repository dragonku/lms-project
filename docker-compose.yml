version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lms-postgres
    environment:
      POSTGRES_DB: lms
      POSTGRES_USER: lms_user
      POSTGRES_PASSWORD: lms_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lms-network

  # Backend Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lms-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lms
      SPRING_DATASOURCE_USERNAME: lms_user
      SPRING_DATASOURCE_PASSWORD: lms_password
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - lms-network
    volumes:
      - ./backend/logs:/app/logs

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lms-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - lms-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: lms-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - lms-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: lms-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - lms-network

volumes:
  postgres_data:
  grafana_data:

networks:
  lms-network:
    driver: bridge